// <auto-generated />
using System;
using LiftOffProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LiftOffProject.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20220125224648_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LiftOffProject.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("addressId")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("streetAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("zipCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("LiftOffProject.Models.CustomerClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("addressId")
                        .HasColumnType("int");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("eMail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("firstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("lastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("paymentClassInfoId")
                        .HasColumnType("int");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("addressId");

                    b.HasIndex("paymentClassInfoId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LiftOffProject.Models.OrderClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("orderInfo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("orderPrice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("orderStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("customerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("LiftOffProject.Models.PaymentClassInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cardNumber")
                        .HasColumnType("int");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<int>("expDate")
                        .HasColumnType("int");

                    b.Property<int>("secCode")
                        .HasColumnType("int");

                    b.Property<string>("streetAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PaymentInfo");
                });

            modelBuilder.Entity("LiftOffProject.Models.ProductInfoClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("OrderClassId")
                        .HasColumnType("int");

                    b.Property<string>("productCatogory")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("productId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("productManufacture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("productName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("productPrice")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("productSeller")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("OrderClassId");

                    b.ToTable("ProductInfoClass");
                });

            modelBuilder.Entity("LiftOffProject.Models.CustomerClass", b =>
                {
                    b.HasOne("LiftOffProject.Models.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressId");

                    b.HasOne("LiftOffProject.Models.PaymentClassInfo", "paymentClassInfo")
                        .WithMany()
                        .HasForeignKey("paymentClassInfoId");
                });

            modelBuilder.Entity("LiftOffProject.Models.OrderClass", b =>
                {
                    b.HasOne("LiftOffProject.Models.CustomerClass", "customer")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiftOffProject.Models.ProductInfoClass", b =>
                {
                    b.HasOne("LiftOffProject.Models.OrderClass", null)
                        .WithMany("products")
                        .HasForeignKey("OrderClassId");
                });
#pragma warning restore 612, 618
        }
    }
}
